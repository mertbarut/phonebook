{"ast":null,"code":"var _jsxFileName = \"/goinfre/mbarut/phonebook/etc/bitrace/src/components/ClassicalAlgorithm.js\";\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classicalTheme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica',\n  headerBgColor: '#ef4444',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#ef4444',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\n\nconst initChatLog = pokemonName => {\n  let chatLog = [];\n  chatLog.push({\n    id: 1,\n    message: `Looking for ${pokemonName} in the database.`,\n    trigger: 2,\n    delay: 0,\n    placeholder: 'Please be patient'\n  });\n  chatLog.push({\n    id: 2,\n    message: `Looking for ${pokemonName} among first 10000 pokemons. Please be patient.`,\n    trigger: 3,\n    delay: 0,\n    placeholder: 'Please be patient'\n  });\n  chatLog.push({\n    id: 3,\n    message: `${pokemonName} not found here! Moving on.`,\n    delay: 1000 * 99 / 2,\n    trigger: 4,\n    placeholder: 'Please be patient'\n  });\n\n  for (let i = 4; i < 72 + 4; i++) {\n    if (i % 2 === 0) {\n      chatLog.push({\n        id: i,\n        message: `Looking for ${pokemonName} among the next 1000 pokemons. Please be patient.`,\n        trigger: i + 1,\n        delay: 0,\n        placeholder: 'Please be patient'\n      });\n    } else {\n      if (i % 7 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Tried my best to find ${pokemonName}, but couldn't. Moving on!`,\n          trigger: i + 1,\n          delay: 1000 * 99 / 2,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 13 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Left no stone unturned for ${pokemonName}, it just wasn't there. Moving on!`,\n          trigger: i + 1,\n          delay: 1000 * 99 / 2,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 17 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Put out all the stops for ${pokemonName}, but it was nowhere to be found. Moving on!`,\n          trigger: i + 1,\n          delay: 1000 * 99,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 19 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Stopped at nothing but ${pokemonName}, ready to move on.`,\n          trigger: i + 1,\n          delay: 1000 * 99,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 31 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Put my soul into finding ${pokemonName}, but to no avail. Moving on...`,\n          trigger: i + 1,\n          delay: 1000 * 99,\n          placeholder: 'Please be patient'\n        });\n      } else {\n        chatLog.push({\n          id: i,\n          message: `Couldn't find ${pokemonName}, moving on...`,\n          trigger: i + 1,\n          delay: 1000 * 99,\n          placeholder: 'Please be patient'\n        });\n      }\n    }\n  }\n\n  chatLog.push({\n    id: 76,\n    message: `FOUND ${pokemonName} after 3600000 tries in 1 hour.`,\n    delay: 1000 * 99,\n    end: true,\n    placeholder: ''\n  });\n  return chatLog;\n};\n\nconst Algorithm = _ref => {\n  let {\n    algorithmName,\n    pokemonName\n  } = _ref;\n  const chatLog = initChatLog(pokemonName);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: classicalTheme,\n    children: /*#__PURE__*/_jsxDEV(ChatBot, {\n      hideBotAvatar: true,\n      botDelay: 0,\n      headerTitle: algorithmName,\n      steps: chatLog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Algorithm;\nexport default Algorithm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Algorithm\");","map":{"version":3,"sources":["/goinfre/mbarut/phonebook/etc/bitrace/src/components/ClassicalAlgorithm.js"],"names":["ChatBot","ThemeProvider","useState","useEffect","classicalTheme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","initChatLog","pokemonName","chatLog","push","id","message","trigger","delay","placeholder","i","end","Algorithm","algorithmName"],"mappings":"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","sourcesContent":["import ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport { useState, useEffect } from 'react';\n\nconst classicalTheme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica',\n  headerBgColor: '#ef4444',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#ef4444',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n};\n\nconst initChatLog = (pokemonName) => {\n  let chatLog = [] \n\n  chatLog.push({\n      id: 1,\n      message: `Looking for ${pokemonName} in the database.`,\n      trigger: 2,\n      delay: 0,\n      placeholder: 'Please be patient',\n    })\n  chatLog.push({\n      id: 2,\n      message: `Looking for ${pokemonName} among first 10000 pokemons. Please be patient.`,\n      trigger: 3,\n      delay: 0,\n      placeholder: 'Please be patient',\n    })\n  chatLog.push({\n      id: 3,\n      message: `${pokemonName} not found here! Moving on.`,\n      delay: 1000 * 99 / 2,\n      trigger: 4,\n      placeholder: 'Please be patient',\n    })\n\n  for ( let i = 4; i < 72 + 4; i++) {\n    if (i % 2 === 0) {\n      chatLog.push({\n        id: i,\n        message: `Looking for ${pokemonName} among the next 1000 pokemons. Please be patient.`,\n        trigger: i + 1,\n        delay: 0,\n        placeholder: 'Please be patient',\n      })\n    } else {\n      if (i % 7 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Tried my best to find ${pokemonName}, but couldn't. Moving on!`,\n          trigger: i + 1,\n          delay: 1000 * 99 / 2,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 13 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Left no stone unturned for ${pokemonName}, it just wasn't there. Moving on!`,\n          trigger: i + 1,\n          delay: 1000 * 99 / 2,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 17 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Put out all the stops for ${pokemonName}, but it was nowhere to be found. Moving on!`,\n          trigger: i + 1,\n          delay: 1000 * 99,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 19 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Stopped at nothing but ${pokemonName}, ready to move on.`,\n          trigger: i + 1,\n          delay: 1000 * 99,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 31 === 0) {\n      chatLog.push({\n        id: i,\n        message: `Put my soul into finding ${pokemonName}, but to no avail. Moving on...`,\n        trigger: i + 1,\n        delay: 1000 * 99,\n        placeholder: 'Please be patient',\n      })\n      } else {\n        chatLog.push({\n          id: i,\n          message: `Couldn't find ${pokemonName}, moving on...`,\n          trigger: i + 1,\n          delay: 1000 * 99,\n          placeholder: 'Please be patient',\n        })\n      }\n    }\n  }\n\n  chatLog.push({\n    id: 76,\n    message: `FOUND ${pokemonName} after 3600000 tries in 1 hour.`,\n    delay: 1000 * 99,\n    end: true,\n    placeholder: '',\n  })\n\n  return chatLog\n}\n\nconst Algorithm = ({algorithmName, pokemonName}) => {\n  const chatLog = initChatLog(pokemonName)\n  return (\n    <ThemeProvider theme={classicalTheme}>\n      <ChatBot\n        hideBotAvatar={true}\n        botDelay={0}\n        headerTitle={algorithmName}\n        steps={chatLog}\n      />\n    </ThemeProvider>\n  )\n}\n\nexport default Algorithm"]},"metadata":{},"sourceType":"module"}