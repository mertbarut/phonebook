{"ast":null,"code":"var _jsxFileName = \"/goinfre/mbarut/phonebook/etc/bitrace/src/components/ClassicalAlgorithm.js\",\n    _s = $RefreshSig$();\n\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classicalTheme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica',\n  headerBgColor: '#ef4444',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#ef4444',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\n\nconst Algorithm = _ref => {\n  _s();\n\n  let {\n    algorithmName,\n    pokemonName\n  } = _ref;\n  const [time, setTime] = useState(Date.now());\n  useEffect(() => {\n    const interval = setInterval(() => setTime(Date.now()), 1000 * 1 * 60);\n    return () => {\n      clearInterval(interval);\n\n      for (let i = 0; i < 58; i++) {\n        chatLog.shift();\n      }\n    };\n  }, []);\n  const chatLog = [{\n    id: 1,\n    message: `Looking for ${pokemonName} in the database...`,\n    trigger: 2,\n    placeholder: 'Please be patient'\n  }, {\n    id: 2,\n    message: `TRY FIRST`,\n    trigger: 3,\n    placeholder: 'Please be patient'\n  }, {\n    id: 3,\n    message: `That is not ${pokemonName}, FAIL #1`,\n    trigger: 4,\n    placeholder: 'Please be patient'\n  }];\n\n  for (let i = 4; i < 7300; i++) {\n    if (i % 2 === 0) {\n      chatLog.push({\n        id: i,\n        message: `TRY NEXT`,\n        trigger: i + 1,\n        placeholder: 'Please be patient'\n      });\n    } else {\n      if (i % 13 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Trying my best to find ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 19 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Leaving no stone unturned for ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 39 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Putting out all the stops for ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 67 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Stopping at nothing but ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 31 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Putting my soul into finding ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else {\n        chatLog.push({\n          id: i,\n          message: `That is not ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      }\n    }\n  }\n\n  chatLog.push({\n    id: 7300,\n    message: `FOUND ${pokemonName} after 3600 tries in 1 hour`,\n    end: true,\n    placeholder: ''\n  });\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: classicalTheme,\n    children: /*#__PURE__*/_jsxDEV(ChatBot, {\n      hideBotAvatar: true,\n      botDelay: 500,\n      headerTitle: algorithmName,\n      steps: chatLog\n    }, time, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Algorithm, \"oVBY/gx+e07gw/cpmtN1gjD1s5U=\");\n\n_c = Algorithm;\nexport default Algorithm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Algorithm\");","map":{"version":3,"sources":["/goinfre/mbarut/phonebook/etc/bitrace/src/components/ClassicalAlgorithm.js"],"names":["ChatBot","ThemeProvider","useState","useEffect","classicalTheme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","Algorithm","algorithmName","pokemonName","time","setTime","Date","now","interval","setInterval","clearInterval","i","chatLog","shift","id","message","trigger","placeholder","push","Math","floor","end"],"mappings":"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","sourcesContent":["import ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport { useState, useEffect } from 'react';\n\nconst classicalTheme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica',\n  headerBgColor: '#ef4444',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#ef4444',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n};\n\nconst Algorithm = ({algorithmName, pokemonName}) => {\n  const [time, setTime] = useState(Date.now());\n\n  useEffect(() => {\n    const interval = setInterval(() => setTime(Date.now()), 1000 * 1 * 60);\n    return () => {\n      clearInterval(interval);\n      for ( let i = 0; i < 58; i++) {\n        chatLog.shift()\n      }\n    };\n  }, []);\n\n  const chatLog = [\n    {\n      id: 1,\n      message: `Looking for ${pokemonName} in the database...`,\n      trigger: 2,\n      placeholder: 'Please be patient',\n    },\n    {\n      id: 2,\n      message: `TRY FIRST`,\n      trigger: 3,\n      placeholder: 'Please be patient',\n    },\n    {\n      id: 3,\n      message: `That is not ${pokemonName}, FAIL #1`,\n      trigger: 4,\n      placeholder: 'Please be patient',\n    },\n  ]\n\n\n  for ( let i = 4; i < 7300; i++) {\n    if (i % 2 === 0) {\n      chatLog.push({\n        id: i,\n        message: `TRY NEXT`,\n        trigger: i + 1,\n        placeholder: 'Please be patient',\n      })\n    } else {\n      if (i % 13 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Trying my best to find ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 19 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Leaving no stone unturned for ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 39 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Putting out all the stops for ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 67 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Stopping at nothing but ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 31 === 0) {\n      chatLog.push({\n        id: i,\n        message: `Putting my soul into finding ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n        trigger: i + 1,\n        placeholder: 'Please be patient',\n      })\n      } else {\n        chatLog.push({\n          id: i,\n          message: `That is not ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      }\n    }\n  }\n\n  chatLog.push({\n        id: 7300,\n        message: `FOUND ${pokemonName} after 3600 tries in 1 hour`,\n        end: true,\n        placeholder: '',\n      })\n\n  return (\n    <ThemeProvider theme={classicalTheme}>\n      <ChatBot\n        key={time}\n        hideBotAvatar={true}\n        botDelay={500}\n        headerTitle={algorithmName}\n        steps={chatLog}\n      />\n    </ThemeProvider>\n  )\n}\n\nexport default Algorithm"]},"metadata":{},"sourceType":"module"}