{"ast":null,"code":"var _jsxFileName = \"/goinfre/mbarut/phonebook/etc/bitrace/src/components/ClassicalAlgorithm.js\",\n    _s = $RefreshSig$();\n\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classicalTheme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica',\n  headerBgColor: '#ef4444',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#ef4444',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\n\nconst initChatLog = pokemonName => {\n  let chatLog = [];\n  chatLog.push({\n    id: 1,\n    message: `Looking for ${pokemonName} in the database...`,\n    trigger: 2,\n    placeholder: 'Please be patient'\n  });\n  chatLog.push({\n    id: 2,\n    message: `TRY FIRST`,\n    trigger: 3,\n    placeholder: 'Please be patient'\n  });\n  chatLog.push({\n    id: 3,\n    message: `That is not ${pokemonName}, FAIL #1`,\n    trigger: 4,\n    placeholder: 'Please be patient'\n  });\n\n  for (let i = 4; i < 7300; i++) {\n    if (i % 2 === 0) {\n      chatLog.push({\n        id: i,\n        message: `TRY NEXT`,\n        trigger: i + 1,\n        placeholder: 'Please be patient'\n      });\n    } else {\n      if (i % 13 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Trying my best to find ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 19 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Leaving no stone unturned for ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 39 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Putting out all the stops for ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 67 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Stopping at nothing but ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 31 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Putting my soul into finding ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else {\n        chatLog.push({\n          id: i,\n          message: `That is not ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      }\n    }\n  }\n\n  chatLog.push({\n    id: 7300,\n    message: `FOUND ${pokemonName} after 3600 tries in 1 hour`,\n    end: true,\n    placeholder: ''\n  });\n  return chatLog;\n};\n\nconst Algorithm = _ref => {\n  _s();\n\n  let {\n    algorithmName,\n    pokemonName\n  } = _ref;\n  const [time, setTime] = useState(Date.now());\n  const [messageIndex, setMessageIndex] = useState(0);\n  const chatLog = initChatLog(pokemonName);\n  const [steps, setSteps] = useState([{\n    id: '1',\n    message: `Looking for ${pokemonName} in the database...`,\n    trigger: '2'\n  }, {\n    id: '2',\n    component: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `${chatLog[messageIndex].message}`\n    }, time, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }, this),\n    end: true\n  }]);\n  useEffect(() => {\n    const interval = setInterval(() => setTime(Date.now()), 1000 * 1);\n    return () => {\n      clearInterval(interval);\n      setMessageIndex(messageIndex + 1);\n      setSteps([...steps, {\n        id: steps[-1].id\n      }]);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: classicalTheme,\n    children: /*#__PURE__*/_jsxDEV(ChatBot, {\n      hideBotAvatar: true,\n      botDelay: 500,\n      headerTitle: algorithmName,\n      steps: steps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Algorithm, \"UUmu4wQP91ciO5Cq2UGFWSDfYO4=\");\n\n_c = Algorithm;\nexport default Algorithm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Algorithm\");","map":{"version":3,"sources":["/goinfre/mbarut/phonebook/etc/bitrace/src/components/ClassicalAlgorithm.js"],"names":["ChatBot","ThemeProvider","useState","useEffect","classicalTheme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","initChatLog","pokemonName","chatLog","push","id","message","trigger","placeholder","i","Math","floor","end","Algorithm","algorithmName","time","setTime","Date","now","messageIndex","setMessageIndex","steps","setSteps","component","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport { useState, useEffect } from 'react';\n\nconst classicalTheme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica',\n  headerBgColor: '#ef4444',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#ef4444',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n};\n\nconst initChatLog = (pokemonName) => {\n  let chatLog = [] \n\n  chatLog.push({\n      id: 1,\n      message: `Looking for ${pokemonName} in the database...`,\n      trigger: 2,\n      placeholder: 'Please be patient',\n    })\n  chatLog.push({\n      id: 2,\n      message: `TRY FIRST`,\n      trigger: 3,\n      placeholder: 'Please be patient',\n    })\n  chatLog.push({\n      id: 3,\n      message: `That is not ${pokemonName}, FAIL #1`,\n      trigger: 4,\n      placeholder: 'Please be patient',\n    })\n\n  for ( let i = 4; i < 7300; i++) {\n    if (i % 2 === 0) {\n      chatLog.push({\n        id: i,\n        message: `TRY NEXT`,\n        trigger: i + 1,\n        placeholder: 'Please be patient',\n      })\n    } else {\n      if (i % 13 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Trying my best to find ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 19 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Leaving no stone unturned for ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 39 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Putting out all the stops for ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 67 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Stopping at nothing but ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 31 === 0) {\n      chatLog.push({\n        id: i,\n        message: `Putting my soul into finding ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n        trigger: i + 1,\n        placeholder: 'Please be patient',\n      })\n      } else {\n        chatLog.push({\n          id: i,\n          message: `That is not ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      }\n    }\n  }\n\n  chatLog.push({\n    id: 7300,\n    message: `FOUND ${pokemonName} after 3600 tries in 1 hour`,\n    end: true,\n    placeholder: '',\n  })\n\n  return chatLog\n}\n\nconst Algorithm = ({algorithmName, pokemonName}) => {\n  const [time, setTime] = useState(Date.now());\n  const [messageIndex, setMessageIndex] = useState(0)\n  const chatLog = initChatLog(pokemonName)\n  const [steps, setSteps] = useState([\n    {\n      id: '1',\n      message: `Looking for ${pokemonName} in the database...`,\n      trigger: '2',\n    },\n    {\n      id: '2',\n      component: (\n          <div key={time}>\n            {`${chatLog[messageIndex].message}`}\n          </div>\n      ),\n      end: true,\n    },\n  ])\n\n  useEffect(() => {\n    const interval = setInterval(() => setTime(Date.now()), 1000 * 1);\n    return () => {\n      clearInterval(interval);\n      setMessageIndex(messageIndex + 1)\n      setSteps([...steps, {id: steps[-1].id }])\n    };\n  }, []);\n\n  return (\n    <ThemeProvider theme={classicalTheme}>\n      <ChatBot\n        hideBotAvatar={true}\n        botDelay={500}\n        headerTitle={algorithmName}\n        steps={steps}\n      />\n    </ThemeProvider>\n  )\n}\n\nexport default Algorithm"]},"metadata":{},"sourceType":"module"}