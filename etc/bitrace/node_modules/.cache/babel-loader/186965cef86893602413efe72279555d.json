{"ast":null,"code":"var _jsxFileName = \"/goinfre/mbarut/phonebook/etc/bitrace/src/components/ClassicalAlgorithm.js\",\n    _s = $RefreshSig$();\n\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classicalTheme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica',\n  headerBgColor: '#ef4444',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#ef4444',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n};\n\nconst Algorithm = _ref => {\n  _s();\n\n  let {\n    algorithmName,\n    pokemonName\n  } = _ref;\n  const [messageReset, triggerMessageReset] = useState(0);\n\n  const handleClear = () => {\n    if (messageReset) {\n      triggerMessageReset(0);\n      return 0;\n    } else {\n      triggerMessageReset(1);\n      return 1;\n    }\n  };\n\n  const chatLog = [{\n    id: 1,\n    message: `Looking for ${pokemonName} in the database...`,\n    trigger: 2,\n    placeholder: 'Please be patient'\n  }, {\n    id: 2,\n    message: `TRY FIRST`,\n    trigger: 3,\n    placeholder: 'Please be patient'\n  }, {\n    id: 3,\n    message: `That is not ${pokemonName}, FAIL #1`,\n    trigger: 4,\n    placeholder: 'Please be patient'\n  }];\n\n  for (let i = 4; i < 7300; i++) {\n    if (i % 2 === 0) {\n      chatLog.push({\n        id: i,\n        message: `TRY NEXT`,\n        trigger: i + 1,\n        placeholder: 'Please be patient'\n      });\n    } else {\n      if (i % 13 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Trying my best to find ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 19 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Leaving no stone unturned for ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 39 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Putting out all the stops for ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 67 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Stopping at nothing but ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else if (i % 31 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Putting my soul into finding ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      } else {\n        chatLog.push({\n          id: i,\n          message: `That is not ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient'\n        });\n      }\n    }\n  }\n\n  chatLog.push({\n    id: 7300,\n    message: `FOUND ${pokemonName} after 3600 tries in 1 hour`,\n    end: true,\n    placeholder: ''\n  });\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: classicalTheme,\n    children: /*#__PURE__*/_jsxDEV(ChatBot, {\n      hideBotAvatar: true,\n      botDelay: 500,\n      headerTitle: algorithmName,\n      steps: chatLog\n    }, () => handleClear(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Algorithm, \"X86sUXACMCxrfkDZdRma2H2+AV8=\");\n\n_c = Algorithm;\nexport default Algorithm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Algorithm\");","map":{"version":3,"sources":["/goinfre/mbarut/phonebook/etc/bitrace/src/components/ClassicalAlgorithm.js"],"names":["ChatBot","ThemeProvider","useState","useEffect","classicalTheme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","Algorithm","algorithmName","pokemonName","messageReset","triggerMessageReset","handleClear","chatLog","id","message","trigger","placeholder","i","push","Math","floor","end"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,UAAU,EAAE,SADS;AAErBC,EAAAA,UAAU,EAAE,WAFS;AAGrBC,EAAAA,aAAa,EAAE,SAHM;AAIrBC,EAAAA,eAAe,EAAE,MAJI;AAKrBC,EAAAA,cAAc,EAAE,MALK;AAMrBC,EAAAA,cAAc,EAAE,SANK;AAOrBC,EAAAA,YAAY,EAAE,MAPO;AAQrBC,EAAAA,eAAe,EAAE,MARI;AASrBC,EAAAA,aAAa,EAAE;AATM,CAAvB;;AAYA,MAAMC,SAAS,GAAG,QAAkC;AAAA;;AAAA,MAAjC;AAACC,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,GAAiC;AAClD,QAAM,CAACC,YAAD,EAAeC,mBAAf,IAAsChB,QAAQ,CAAC,CAAD,CAApD;;AAEA,QAAMiB,WAAW,GAAG,MAAM;AACxB,QAAIF,YAAJ,EAAkB;AACjBC,MAAAA,mBAAmB,CAAC,CAAD,CAAnB;AACA,aAAO,CAAP;AACA,KAHD,MAGO;AACNA,MAAAA,mBAAmB,CAAC,CAAD,CAAnB;AACA,aAAO,CAAP;AACA;AACF,GARD;;AAUA,QAAME,OAAO,GAAG,CACd;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,OAAO,EAAG,eAAcN,WAAY,qBAFtC;AAGEO,IAAAA,OAAO,EAAE,CAHX;AAIEC,IAAAA,WAAW,EAAE;AAJf,GADc,EAOd;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,OAAO,EAAG,WAFZ;AAGEC,IAAAA,OAAO,EAAE,CAHX;AAIEC,IAAAA,WAAW,EAAE;AAJf,GAPc,EAad;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,OAAO,EAAG,eAAcN,WAAY,WAFtC;AAGEO,IAAAA,OAAO,EAAE,CAHX;AAIEC,IAAAA,WAAW,EAAE;AAJf,GAbc,CAAhB;;AAsBA,OAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG,IAArB,EAA2BA,CAAC,EAA5B,EAAgC;AAC9B,QAAIA,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACfL,MAAAA,OAAO,CAACM,IAAR,CAAa;AACXL,QAAAA,EAAE,EAAEI,CADO;AAEXH,QAAAA,OAAO,EAAG,UAFC;AAGXC,QAAAA,OAAO,EAAEE,CAAC,GAAG,CAHF;AAIXD,QAAAA,WAAW,EAAE;AAJF,OAAb;AAMD,KAPD,MAOO;AACL,UAAIC,CAAC,GAAG,EAAJ,KAAW,CAAf,EAAkB;AAChBL,QAAAA,OAAO,CAACM,IAAR,CAAa;AACXL,UAAAA,EAAE,EAAEI,CADO;AAEXH,UAAAA,OAAO,EAAG,0BAAyBN,WAAY,WAAUW,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAG,CAAf,CAAkB,EAFhE;AAGXF,UAAAA,OAAO,EAAEE,CAAC,GAAG,CAHF;AAIXD,UAAAA,WAAW,EAAE;AAJF,SAAb;AAMD,OAPD,MAOO,IAAIC,CAAC,GAAG,EAAJ,KAAW,CAAf,EAAkB;AACvBL,QAAAA,OAAO,CAACM,IAAR,CAAa;AACXL,UAAAA,EAAE,EAAEI,CADO;AAEXH,UAAAA,OAAO,EAAG,iCAAgCN,WAAY,WAAUW,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAG,CAAf,CAAkB,EAFvE;AAGXF,UAAAA,OAAO,EAAEE,CAAC,GAAG,CAHF;AAIXD,UAAAA,WAAW,EAAE;AAJF,SAAb;AAMD,OAPM,MAOA,IAAIC,CAAC,GAAG,EAAJ,KAAW,CAAf,EAAkB;AACvBL,QAAAA,OAAO,CAACM,IAAR,CAAa;AACXL,UAAAA,EAAE,EAAEI,CADO;AAEXH,UAAAA,OAAO,EAAG,iCAAgCN,WAAY,WAAUW,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAG,CAAf,CAAkB,EAFvE;AAGXF,UAAAA,OAAO,EAAEE,CAAC,GAAG,CAHF;AAIXD,UAAAA,WAAW,EAAE;AAJF,SAAb;AAMD,OAPM,MAOA,IAAIC,CAAC,GAAG,EAAJ,KAAW,CAAf,EAAkB;AACvBL,QAAAA,OAAO,CAACM,IAAR,CAAa;AACXL,UAAAA,EAAE,EAAEI,CADO;AAEXH,UAAAA,OAAO,EAAG,2BAA0BN,WAAY,WAAUW,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAG,CAAf,CAAkB,EAFjE;AAGXF,UAAAA,OAAO,EAAEE,CAAC,GAAG,CAHF;AAIXD,UAAAA,WAAW,EAAE;AAJF,SAAb;AAMD,OAPM,MAOA,IAAIC,CAAC,GAAG,EAAJ,KAAW,CAAf,EAAkB;AACzBL,QAAAA,OAAO,CAACM,IAAR,CAAa;AACXL,UAAAA,EAAE,EAAEI,CADO;AAEXH,UAAAA,OAAO,EAAG,gCAA+BN,WAAY,WAAUW,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAG,CAAf,CAAkB,EAFtE;AAGXF,UAAAA,OAAO,EAAEE,CAAC,GAAG,CAHF;AAIXD,UAAAA,WAAW,EAAE;AAJF,SAAb;AAMC,OAPM,MAOA;AACLJ,QAAAA,OAAO,CAACM,IAAR,CAAa;AACXL,UAAAA,EAAE,EAAEI,CADO;AAEXH,UAAAA,OAAO,EAAG,eAAcN,WAAY,WAAUW,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAG,CAAf,CAAkB,EAFrD;AAGXF,UAAAA,OAAO,EAAEE,CAAC,GAAG,CAHF;AAIXD,UAAAA,WAAW,EAAE;AAJF,SAAb;AAMD;AACF;AACF;;AAEDJ,EAAAA,OAAO,CAACM,IAAR,CAAa;AACPL,IAAAA,EAAE,EAAE,IADG;AAEPC,IAAAA,OAAO,EAAG,SAAQN,WAAY,6BAFvB;AAGPa,IAAAA,GAAG,EAAE,IAHE;AAIPL,IAAAA,WAAW,EAAE;AAJN,GAAb;AAOA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEpB,cAAtB;AAAA,2BACE,QAAC,OAAD;AAEE,MAAA,aAAa,EAAE,IAFjB;AAGE,MAAA,QAAQ,EAAE,GAHZ;AAIE,MAAA,WAAW,EAAEW,aAJf;AAKE,MAAA,KAAK,EAAEK;AALT,OACO,MAAMD,WAAW,EADxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA5GD;;GAAML,S;;KAAAA,S;AA8GN,eAAeA,SAAf","sourcesContent":["import ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport { useState, useEffect } from 'react';\n\nconst classicalTheme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica',\n  headerBgColor: '#ef4444',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#ef4444',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a',\n};\n\nconst Algorithm = ({algorithmName, pokemonName}) => {\n  const [messageReset, triggerMessageReset] = useState(0)\n\n  const handleClear = () => {\n    if (messageReset) {\n     triggerMessageReset(0);\n     return 0\n    } else {\n     triggerMessageReset(1);\n     return 1\n    }\n  }\n\n  const chatLog = [\n    {\n      id: 1,\n      message: `Looking for ${pokemonName} in the database...`,\n      trigger: 2,\n      placeholder: 'Please be patient',\n    },\n    {\n      id: 2,\n      message: `TRY FIRST`,\n      trigger: 3,\n      placeholder: 'Please be patient',\n    },\n    {\n      id: 3,\n      message: `That is not ${pokemonName}, FAIL #1`,\n      trigger: 4,\n      placeholder: 'Please be patient',\n    },\n  ]\n\n\n  for ( let i = 4; i < 7300; i++) {\n    if (i % 2 === 0) {\n      chatLog.push({\n        id: i,\n        message: `TRY NEXT`,\n        trigger: i + 1,\n        placeholder: 'Please be patient',\n      })\n    } else {\n      if (i % 13 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Trying my best to find ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 19 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Leaving no stone unturned for ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 39 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Putting out all the stops for ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 67 === 0) {\n        chatLog.push({\n          id: i,\n          message: `Stopping at nothing but ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      } else if (i % 31 === 0) {\n      chatLog.push({\n        id: i,\n        message: `Putting my soul into finding ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n        trigger: i + 1,\n        placeholder: 'Please be patient',\n      })\n      } else {\n        chatLog.push({\n          id: i,\n          message: `That is not ${pokemonName}, FAIL #${Math.floor(i / 2)}`,\n          trigger: i + 1,\n          placeholder: 'Please be patient',\n        })\n      }\n    }\n  }\n\n  chatLog.push({\n        id: 7300,\n        message: `FOUND ${pokemonName} after 3600 tries in 1 hour`,\n        end: true,\n        placeholder: '',\n      })\n\n  return (\n    <ThemeProvider theme={classicalTheme}>\n      <ChatBot\n        key={() => handleClear()}\n        hideBotAvatar={true}\n        botDelay={500}\n        headerTitle={algorithmName}\n        steps={chatLog}\n      />\n    </ThemeProvider>\n  )\n}\n\nexport default Algorithm"]},"metadata":{},"sourceType":"module"}